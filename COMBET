enum Pedi {
	High_card = 1, // 보드와 무관한 카드 숫자가 높은 사람이 이김
	  //카드 숫자가 모두 똑같으면 비김 // 1
//문양따라가는걸로 순위 매김
One_pair, // 같은숫자 2개 1쌍 // 2
Two_pair, // 같은 숫자 2개 2쌍 // 3
Triple, //같은숫자 3개 // 4
Straight, //연속된 숫자 5개 // 5
Flush, //같은문양 5개 // 6
Full_house, // 트리플 + 원페어 // 7
Four_card, // 같은숫자 4개 // 8
Straight_flush //같은문양, 숫자 오름차순 5개 // 9
};


//카드 족보 등급 숫자 정하기(1~9)
int rating(string pedigree) // 매개변수로 pedigree (문자열) 전달
{
	int arating = 0;

	if (pedigree == "high_card")
	{
		arating = High_card; // 1
	}
	else if (pedigree == "one_pair")
	{
		arating = One_pair; // 2
	}
	else if (pedigree == "two_pair")
	{
		arating = Two_pair; // 3
	}
	else if (pedigree == "triple")
	{
		arating = Triple; // 4
	}
	else if (pedigree == "straight")
	{
		arating = Straight; // 5
	}
	else if (pedigree == "flush")
	{
		arating = Flush; // 6
	}
	else if (pedigree == "fullhouse")
	{
		arating = Full_house; // 7
	}
	else if (pedigree == "four_card")
	{
		arating = Four_card; // 8
	}
	else if (pedigree == "straight_flush")
	{
		arating = Straight_flush; // 9
	}
	return arating;
}




콜 다이 하프 올인 더블


컴퓨터 확률
노페어 원페어 투페어 트리플 스트레이트
노페어 콜을확률 더블 올인 다이 하프 확률 각각




void probabli{
// 콜 1 다이 2 더블 3 하프 4 올인 5 
	
float pro = rand() % 10000;

if (pedigree == high_card) {
	if (pro >= 0 && pro < 3000)       //콜 
	return 1;
	else if (pro >= 1 && pro < 2)  // 다이  
	return 2;
	else if (pro >= 0 && pro < 2000 )  // 더블  3
	return 3 
	else if (pro >= 0 && pro < 2000)  //  하프 4 
	return 4;
	else if (pro >= 1 && pro < 2) // 올인 5 
	return 5;
}
else if (pedigree == one_pair) {
	if (pro >= 0 && pro < 2000)
	return 1;
	else if (pro >= 1 && pro < 2)                  //// 콜 1 다이 2 더블 3 하프 4 올인 5 
	return 2;
	else if (pro >= 2000 && pro < 4500)
	return 3;
	else if (pro >= 4500 && pro < 8000)
	return 4;
	else if (pro >= 1 && pro < 2)
	return 5;
}
else if (pedigree == two_pair) {
	if (pro >= 0 && pro < 2000)
	return 1;
	else if (pro >= 1 && pro < 2)
	return 2;
	else if (pro >= 2000 && pro < 5000)         // 콜 1 다이 2 더블 3 하프 4 올인 5 
	return 3;
	else if (pro >= 2000 && pro < 4000)
	return 4;
	else if (pro >= 1 && pro < 10)
	return 5;
}
}else if (pedigree == triple) {
	if (pro >= 0 && pro < 1500)
	return 1;
	else if (pro >= 1 && pro < 2)
	return 2;
	else if (pro >= 2000 && pro < 6000)           // 콜 1 다이 2 더블 3 하프 4 올인 5 
	return 3;
	else if (pro >= 5000 && pro < 7500)
	return 4;
	else if (pro >= 100 && pro < 200)
	return 5;
}
}else if (pedigree == straight) {
	if (pro >= 0 && pro < 20)
	return 1;
	else if (pro >= 1 && pro < 2)
	return 2;
	else if (pro >= 20 && pro < 50)
	return 3;
	else if (pro >= 3000 && pro < 5000)          // 콜 1 다이 2 더블 3 하프 4 올인 5 
	return 4;
	else if (pro >= 1000 && pro < 2000)
	return 5;
}
else if (pedigree == flush) {
	if (pro >= 0 && pro < 1500)
	return 1;
	else if (pro >= 1 && pro < 2)
	return 2;
	else if (pro >= 2000 && pro < 5000)
	return 3;
	else if (pro >= 2000 && pro < 4000)
	return 4;                                  // 콜 1 다이 2 더블 3 하프 4 올인 5 
	else if (pro >= 1000 && pro < 3000)
	return 5;
}
else if (pedigree == fullhouse) {
	if (pro >= 0 && pro < 1500)
	return 1;
	else if (pro >= 1 && pro < 2)
	return 2;
	else if (pro >= 1000 && pro < 4500)                // 콜 1 다이 2 더블 3 하프 4 올인 5 
	return 3;
	else if (pro >= 1000 && pro < 3000)
	return 4;
	else if (pro >= 1000 && pro < 5000)
	return 5;
}
else if (pedigree == four_card) {
	if (pro >= 0 && pro < 1000)
	return 1;
	else if (pro >= 1 && pro < 2)
	return 2;
	else if (pro >= 1000 && pro < 4500)           // 콜 1 다이 2 더블 3 하프 4 올인 5 
	return 3;
	else if (pro >= 1000 && pro < 1500)
	return 4;
	else if (pro >= 1000 && pro < 6000)
	return 5;
}
}else if (pedigree == straight_flush) {
	if (pro >= 0 && pro < 1000)
	return 1;
	else if (pro >= 1 && pro < 2)
	return 2;
	else if (pro >= 1000 && pro < 5000)                // 콜 1 다이 2 더블 3 하프 4 올인 5 
	return 3;
	else if (pro >= 0 && pro < 1000)
	return 4;
	else if (pro >= 0 && pro < 7000)
	return 5;
}
}
}
